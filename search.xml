<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Tomcat上传图片显示过慢]]></title>
    <url>%2F2018%2F04%2F14%2F7%2F</url>
    <content type="text"><![CDATA[解决方法：在conf目录下的context.xml里添加： Tomcat8官方文档：https://tomcat.apache.org/tomcat-8.0-doc/config/resources.html]]></content>
      <categories>
        <category>bug</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux系统传输文件]]></title>
    <url>%2F2018%2F04%2F08%2F4%2F</url>
    <content type="text"><![CDATA[背景：serverA 服务器的 usera 用户免密码登录 serverB 服务器的 userb用户。1.usera 登录 serverA 服务器2.在serverA上生成密钥 : ssh-keygen -t rsa3.按回车或yes 4.ssh-copy-id userb@10.124.84.20]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tomcat上传图片java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11.XToolkit异常解决]]></title>
    <url>%2F2018%2F03%2F14%2F6%2F</url>
    <content type="text"><![CDATA[原因：未知，与环境有关系解决方案：在Tomcat/bin/catalina.sh 中增加-Djava.awt.headless=true]]></content>
      <categories>
        <category>bug</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[maven添加自定义jar,编译通过,运行抛ClassNotFoundException]]></title>
    <url>%2F2018%2F01%2F16%2F2%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819202122232425&lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt; &lt;version&gt;2.3.1&lt;/version&gt; &lt;configuration&gt; &lt;archive&gt; &lt;addMavenDescriptor&gt;false&lt;/addMavenDescriptor&gt; &lt;manifest&gt; &lt;mainClass&gt;com.alibaba.dubbo.container.Main&lt;/mainClass&gt; &lt;useUniqueVersions&gt;false&lt;/useUniqueVersions&gt; &lt;addClasspath&gt;true&lt;/addClasspath&gt; &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt; &lt;/manifest&gt; &lt;manifestEntries&gt; &lt;Company&gt;com.baidu&lt;/Company&gt; &lt;Project&gt;com.baidu.shitu&lt;/Project&gt; &lt;Support&gt;baidu@qq.com&lt;/Support&gt; &lt;Built-Time&gt;$&#123;maven.build.timestamp&#125;&lt;/Built-Time&gt; &lt;JAR-Version&gt;1&lt;/JAR-Version&gt; &lt;!-- 此处添加自定义的jar包 --&gt; &lt;Class-Path&gt;lib/alipay-2.0.1.jar&lt;/Class-Path&gt; &lt;/manifestEntries&gt; &lt;/archive&gt; &lt;/configuration&gt;&lt;/plugin&gt;]]></content>
      <categories>
        <category>bug</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dubbo 设定超时]]></title>
    <url>%2F2017%2F09%2F08%2F5%2F</url>
    <content type="text"><![CDATA[在conusmer中配置，以下超时时间为60秒1&lt;dubbo:reference id=&quot;volunteerService&quot; interface=&quot;cn.jufuns.residences.volunteer.api.service.VolunteerService&quot; timeout=&quot;600000&quot;/&gt; 单独配置service中的某个方法的超时时间123&lt;dubbo:reference interface=&quot;cn.jufuns.residences.api.service.UserService&quot; id=&quot;userService&quot;&gt; &lt;dubbo:method name=&quot;updateUserTimeLine&quot; timeout=&quot;1000000&quot;&gt;&lt;/dubbo:method&gt; &lt;/dubbo:reference&gt; 提示： 1.consumer会在超过3秒时得到一个调用超时的异常。 2.provider中代码的执行不会因为超时而中断，在执行完毕后，会得到一个dubbo的警告。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[shiro realm注入dubbo服务为空]]></title>
    <url>%2F2017%2F07%2F17%2F3%2F</url>
    <content type="text"><![CDATA[1.确定dubbo的bean要在realm之前加载 2.在realm的bean下添加一个property,把需要注入的服务设置进来,例如userService,然后在realm中创建该服务的Getter和Setter方法]]></content>
      <categories>
        <category>bug</category>
      </categories>
      <tags>
        <tag>shiro</tag>
        <tag>java</tag>
      </tags>
  </entry>
</search>
